// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ViveDatabase {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.ECS.Components;
    using uFrame.Json;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(9)]
    [uFrame.Attributes.uFrameIdentifier("2156f58d-2de4-4db9-971e-a067cbe9646f")]
    public partial class EnemySpawner : uFrame.ECS.Components.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Vector3 _position;
        
        [UnityEngine.SerializeField()]
        private GameObject _prefab;
        
        private Subject<PropertyChangedEvent<Vector3>> _positionObservable;
        
        private PropertyChangedEvent<Vector3> _positionEvent;
        
        private Subject<PropertyChangedEvent<GameObject>> _prefabObservable;
        
        private PropertyChangedEvent<GameObject> _prefabEvent;
        
        public override int ComponentId {
            get {
                return 9;
            }
        }
        
        public IObservable<PropertyChangedEvent<Vector3>> positionObservable {
            get {
                return _positionObservable ?? (_positionObservable = new Subject<PropertyChangedEvent<Vector3>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<GameObject>> prefabObservable {
            get {
                return _prefabObservable ?? (_prefabObservable = new Subject<PropertyChangedEvent<GameObject>>());
            }
        }
        
        public Vector3 position {
            get {
                return _position;
            }
            set {
                Setposition(value);
            }
        }
        
        public GameObject prefab {
            get {
                return _prefab;
            }
            set {
                Setprefab(value);
            }
        }
        
        public virtual void Setposition(Vector3 value) {
            SetProperty(ref _position, value, ref _positionEvent, _positionObservable);
        }
        
        public virtual void Setprefab(GameObject value) {
            SetProperty(ref _prefab, value, ref _prefabEvent, _prefabObservable);
        }
    }
}
